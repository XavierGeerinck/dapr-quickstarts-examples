import GRPCServer from './GRPCServer';
import IServerActor from '../../../interfaces/Server/IServerActor';
import AbstractActor from '../../../actors/runtime/AbstractActor';
import Class from '../../../types/Class';
import GRPCClient from '../../Client/GRPCClient/GRPCClient';
export default class GRPCServerActor implements IServerActor {
    server: GRPCServer;
    client: GRPCClient;
    constructor(server: GRPCServer, client: GRPCClient);
    deactivateActor(actorType: string, actorId: string): Promise<void>;
    init(): Promise<void>;
    getRegisteredActors(): Promise<string[]>;
    registerActor<T extends AbstractActor>(cls: Class<T>): Promise<void>;
}
