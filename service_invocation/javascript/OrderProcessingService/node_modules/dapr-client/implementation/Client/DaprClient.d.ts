import IClientBinding from '../../interfaces/Client/IClientBinding';
import IClientPubSub from '../../interfaces/Client/IClientPubSub';
import IClientState from '../../interfaces/Client/IClientState';
import IClientInvoker from '../../interfaces/Client/IClientInvoker';
import IClientSecret from '../../interfaces/Client/IClientSecret';
import IClientActor from '../../interfaces/Client/IClientActor';
import IClient from '../../interfaces/Client/IClient';
import CommunicationProtocolEnum from '../../enum/CommunicationProtocol.enum';
export default class DaprClient {
    readonly daprHost: string;
    readonly daprPort: string;
    readonly communicationProtocol: CommunicationProtocolEnum;
    readonly daprClient: IClient;
    readonly pubsub: IClientPubSub;
    readonly state: IClientState;
    readonly binding: IClientBinding;
    readonly invoker: IClientInvoker;
    readonly secret: IClientSecret;
    readonly actor: IClientActor;
    constructor(daprHost: string, daprPort: string, communicationProtocol?: CommunicationProtocolEnum);
    static create(client: IClient): DaprClient;
    getDaprClient(): IClient;
    getDaprHost(): string;
    getDaprPort(): string;
}
