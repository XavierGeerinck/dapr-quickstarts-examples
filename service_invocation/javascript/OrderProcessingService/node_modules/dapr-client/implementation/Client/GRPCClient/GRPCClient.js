"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var grpc_js_1 = require("@grpc/grpc-js");
var dapr_grpc_pb_1 = require("../../../proto/dapr/proto/runtime/v1/dapr_grpc_pb");
var CommunicationProtocol_enum_1 = __importDefault(require("../../../enum/CommunicationProtocol.enum"));
var GRPCClient = /** @class */ (function () {
    function GRPCClient(host, port) {
        if (host === void 0) { host = "127.0.0.1"; }
        if (port === void 0) { port = "50050"; }
        this.isInitialized = true;
        this.clientHost = host;
        this.clientPort = port;
        this.clientCredentials = grpc_js_1.ChannelCredentials.createInsecure();
        console.log("[Dapr-JS][gRPC] Opening connection to " + this.clientHost + ":" + this.clientPort);
        this.client = new dapr_grpc_pb_1.DaprClient(this.clientHost + ":" + this.clientPort, this.clientCredentials);
    }
    GRPCClient.prototype.getClientHost = function () {
        return this.clientHost;
    };
    GRPCClient.prototype.getClientPort = function () {
        return this.clientPort;
    };
    GRPCClient.prototype.getClient = function () {
        return this.client;
    };
    GRPCClient.prototype.getClientCommunicationProtocol = function () {
        return CommunicationProtocol_enum_1.default.GRPC;
    };
    return GRPCClient;
}());
exports.default = GRPCClient;
