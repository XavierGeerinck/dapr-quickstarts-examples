"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var binding_1 = __importDefault(require("./GRPCClient/binding"));
var pubsub_1 = __importDefault(require("./GRPCClient/pubsub"));
var state_1 = __importDefault(require("./GRPCClient/state"));
var invoker_1 = __importDefault(require("./GRPCClient/invoker"));
var secret_1 = __importDefault(require("./GRPCClient/secret"));
var actor_1 = __importDefault(require("./GRPCClient/actor"));
var GRPCClient_1 = __importDefault(require("./GRPCClient/GRPCClient"));
var binding_2 = __importDefault(require("./HTTPClient/binding"));
var pubsub_2 = __importDefault(require("./HTTPClient/pubsub"));
var state_2 = __importDefault(require("./HTTPClient/state"));
var invoker_2 = __importDefault(require("./HTTPClient/invoker"));
var secret_2 = __importDefault(require("./HTTPClient/secret"));
var actor_2 = __importDefault(require("./HTTPClient/actor"));
var HTTPClient_1 = __importDefault(require("./HTTPClient/HTTPClient"));
var CommunicationProtocol_enum_1 = __importDefault(require("../../enum/CommunicationProtocol.enum"));
var DaprClient = /** @class */ (function () {
    function DaprClient(daprHost, daprPort, communicationProtocol) {
        if (communicationProtocol === void 0) { communicationProtocol = CommunicationProtocol_enum_1.default.HTTP; }
        this.daprHost = daprHost;
        this.daprPort = daprPort;
        this.communicationProtocol = communicationProtocol;
        // Validation on port
        if (!/^[0-9]+$/.test(this.daprPort)) {
            throw new Error('DAPR_CLIENT_INCORRECT_PORT');
        }
        // Builder
        switch (communicationProtocol) {
            case CommunicationProtocol_enum_1.default.GRPC: {
                var client = new GRPCClient_1.default(this.daprHost, this.daprPort);
                this.daprClient = client;
                this.state = new state_1.default(client);
                this.pubsub = new pubsub_1.default(client);
                this.binding = new binding_1.default(client);
                this.invoker = new invoker_1.default(client);
                this.secret = new secret_1.default(client);
                this.actor = new actor_1.default(client);
                break;
            }
            case CommunicationProtocol_enum_1.default.HTTP:
            default: {
                var client = new HTTPClient_1.default(this.daprHost, this.daprPort);
                this.daprClient = client;
                this.state = new state_2.default(client);
                this.pubsub = new pubsub_2.default(client);
                this.binding = new binding_2.default(client);
                this.invoker = new invoker_2.default(client);
                this.secret = new secret_2.default(client);
                this.actor = new actor_2.default(client);
                break;
            }
        }
    }
    DaprClient.create = function (client) {
        return new DaprClient(client.getClientHost(), client.getClientPort(), client.getClientCommunicationProtocol());
    };
    DaprClient.prototype.getDaprClient = function () {
        return this.daprClient;
    };
    DaprClient.prototype.getDaprHost = function () {
        return this.daprHost;
    };
    DaprClient.prototype.getDaprPort = function () {
        return this.daprPort;
    };
    return DaprClient;
}());
exports.default = DaprClient;
