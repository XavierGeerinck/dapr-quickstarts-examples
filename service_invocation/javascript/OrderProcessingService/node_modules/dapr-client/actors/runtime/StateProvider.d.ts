import { DaprClient } from "../..";
import ActorStateChange from "./ActorStateChange";
export default class StateProvider {
    stateClient: DaprClient;
    constructor(daprClient: DaprClient);
    containsState(actorType: string, actorId: string, stateName: string): Promise<boolean>;
    tryLoadState(actorType: string, actorId: string, stateName: string): Promise<[boolean, any]>;
    /**
     * Create and save the state through a transactional update request body. E.g.
     * [
     *     {
     *         "operation": "upsert",
     *         "request": {
     *             "key": "key1",
     *             "value": "myData"
     *         }
     *     },
     *     {
     *         "operation": "delete",
     *         "request": {
     *             "key": "key2"
     *         }
     *     }
     * ]
     * @param actorType
     * @param actorId
     * @param stateChanges
     */
    saveState(actorType: string, actorId: string, stateChanges: ActorStateChange<any>[]): Promise<void>;
}
